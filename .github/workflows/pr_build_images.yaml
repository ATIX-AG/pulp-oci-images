name: Build OCI Images

on:
  - pull_request

env:
  COLORTERM: 'yes'
  TERM: 'xterm-256color'
  PYTEST_ADDOPTS: '--color=yes'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # by default, it uses a depth of 1
          # this fetches all history so that we can read each commit
          fetch-depth: 0
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'
      - name: Check commit message
        if: github.event_name == 'pull_request'
        env:
          GITHUB_CONTEXT: ${{ github.event.pull_request.commits_url }}
        run: |
          echo ::group::REQUESTS
          pip install pygithub
          echo ::endgroup::
          for sha in $(curl $GITHUB_CONTEXT | jq '.[].sha' | sed 's/"//g')
          do
            python .ci/scripts/validate_commit_message.py $sha
            VALUE=$?
            if [ "$VALUE" -gt 0 ]; then
              exit $VALUE
            fi
          done
        shell: bash
  s6-images:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - ci_type: pulp_ci_centos
            ci_image: pulp-ci-centos
            test_type: pulp_galaxy_ng
            test_image: pulp-galaxy-ng
            web_image: galaxy-web
          - ci_type: pulp_ci_centos
            ci_image: pulp-ci-centos
            test_type: pulp
            test_image: pulp
            web_image: pulp-web
    steps:
      - uses: actions/checkout@v2
      - name: Install httpie and podman-compose
        run: |
          echo ::group::HTTPIE
          sudo apt-get update -yq
          sudo -E apt-get -yq --no-install-suggests --no-install-recommends install httpie
          echo ::endgroup::
          echo "HTTPIE_CONFIG_DIR=$GITHUB_WORKSPACE/.ci/assets/httpie/" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ matrix.image_tag }}" >> $GITHUB_ENV
          pip install podman-compose
        shell: bash
      - name: Build the images
        run: |
          podman build --file images/Containerfile.core.base --tag pulp/base:latest .
          podman build --file images/${{ matrix.ci_type }}/Containerfile --tag pulp/${{ matrix.ci_image }}:latest .
          podman build --file images/${{ matrix.test_type }}/Containerfile --tag pulp/${{ matrix.test_image }}:latest .
      - name: Test upgrading to the image in s6 mode
        if: matrix.test_image == 'pulp'
        run: |
          # 3.20 has postgres 12 rather than 13
          images/s6_assets/test.sh "pulp/${{ matrix.test_image }}:latest" http "quay.io/pulp/all-in-one-pulp:3.20"
          podman stop pulp
          podman rm pulp
      - name: Test the image in s6 mode
        if: matrix.test_image != 'pulp'
        run: |
          images/s6_assets/test.sh "pulp/${{ matrix.test_image }}:latest"
          podman stop pulp
          podman rm pulp
      - name: Test the image in s6 mode with https
        run: |
          # Delete the database from the previous test 1st, so test.sh does not fail
          sudo rm -rf pgsql/data
          images/s6_assets/test.sh "pulp/${{ matrix.test_image }}:latest" https
          podman stop pulp
          podman rm pulp
      - name: Compose up
        run: |
          cd images/compose
          sed -i "s/pulp-minimal:latest/${{ matrix.test_image }}:latest/g" docker-compose.folders.yml
          sed -i "s/pulp\/pulp-web/pulp\/${{ matrix.web_image }}/g" docker-compose.folders.yml
          id | grep "(root)" || sudo usermod -G root $(whoami)
          podman-compose -f docker-compose.folders.yml up -d
          sleep 30
          for _ in $(seq 20)
          do
            sleep 3
            if curl --fail http://localhost:8080/pulp/api/v3/status/ > /dev/null 2>&1
            then
              break
            fi
          done
          curl --fail http://localhost:8080/pulp/api/v3/status/ | jq
        shell: bash
      - name: Test all components (pulp)
        if: matrix.test_type == 'pulp'
        run: |
          git clone --depth=1 https://github.com/pulp/pulp_ansible.git
          git clone --depth=1 https://github.com/pulp/pulp_container.git
          .ci/scripts/pulp_tests.sh
        shell: bash
        env:
          PY_COLORS: '1'
      - name: Test all components (galaxy)
        if: matrix.test_type == 'pulp_galaxy_ng'
        run: |
          .ci/scripts/galaxy_ng-tests.sh
        shell: bash
        env:
          PY_COLORS: '1'
      - name: Display logs
        if: always()
        run: |
          podman logs pulp || true
          cd images/compose
          podman-compose logs
