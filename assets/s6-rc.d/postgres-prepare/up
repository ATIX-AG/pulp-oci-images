#!/usr/bin/execlineb -S0

define PREFIX "[oneshot] postgres-prepare:"

define C000 "\033[0m"
define C030 "\033[0;30m"
define C031 "\033[0;31m"
define C032 "\033[0;32m"
define C033 "\033[0;33m"
define C034 "\033[0;34m"
define C035 "\033[0;35m"
define C036 "\033[0;36m"
define C037 "\033[0;37m"
define C130 "\033[1;30m"
define C131 "\033[1;31m"
define C132 "\033[1;32m"
define C133 "\033[1;33m"
define C134 "\033[1;34m"
define C135 "\033[1;35m"
define C136 "\033[1;36m"
define C137 "\033[1;37m"

backtick -n ! { pipeline { postgres --version } egrep -o "[0-9]{1,}\.[0-9]{1,}" }
importas -u PGVERSION !
define PGHOME "/var/lib/pgsql"
define PGDATA "${PGHOME}/data"

foreground {
ifthenelse { s6-test -d "${PGDATA}/base" -a -f "${PGDATA}/PG_VERSION" }
{
  backtick -n ! { redirfd -r 0 "${PGDATA}/PG_VERSION" s6-cat }
  importas -u PGDATA_VERSION !
  ifelse { s6-test "${PGDATA_VERSION}" = "${PGVERSION}" } {
    if { s6-echo "${PREFIX} ${C031}${PGDATA} exists but needs upgrade ${PGDATA_VERSION} != ${PGVERSION}${C000}" }
    exit 200
  }
}
{
  if {
    if { s6-echo "${PREFIX} ${C032}initdb --pgdata ${PGDATA}${C000}" }
    #redirfd -w 1 /dev/null
    fdmove -c 2 1
    s6-setuidgid postgres
    backtick -D "C" -n LANG { printcontenv LANG }
    initdb --pgdata=${PGDATA}
  }
}
}

importas -u ? ?
ifelse { s6-test ${?} -ne 0 } { exit ${?} }

background {
  #redirfd -w 1 /dev/null
  fdmove -c 2 1
  s6-setuidgid postgres
  postgres -D ${PGDATA}
}
importas -u PG_PID !
if { s6-echo "${PREFIX} ${C133}started service [${PG_PID}] postgres${C000}" }

if { s6-echo "${PREFIX} ${C130}wait for services startup...${C000}" }

foreground {
  s6-sleep -m 500
  s6-setuidgid postgres
  loopwhilex -x 0 pg_isready --quiet
}

backtick -n ! {
  s6-setuidgid postgres
  psql --no-align --tuples-only --command="SELECT (1) FROM pg_database WHERE datname='pulp' LIMIT 1"
}
importas -u DATABASE_EXISTS !

foreground {
  if { s6-test ${DATABASE_EXISTS} != "1" }
  if { s6-echo "${PREFIX} ${C032}createuser pulp${C000}" }
  #redirfd -w 1 /dev/null
  fdmove -c 2 1
  s6-setuidgid postgres
  createuser pulp
}

foreground {
  if { s6-test ${DATABASE_EXISTS} != "1" }
  if { s6-echo "${PREFIX} ${C032}createdb --encoding=utf-8 -O pulp pulp${C000}" }
  redirfd -w 1 /dev/null
  fdmove -c 2 1
  s6-setuidgid postgres
  createdb --encoding=utf-8 pulp
}

foreground {
  if { s6-echo "${PREFIX} ${C032}mkdir certs${C000}" }
  if -n {
    ls /etc/pulp/certs
  }
  mkdir -p /etc/pulp/certs
}
foreground {
  if { s6-echo "${PREFIX} ${C032}create symmetric key{C000}" }
  if -n {
    ls /etc/pulp/certs/database_fields.symmetric.key
  }
  redirfd -w 1 /etc/pulp/certs/database_fields.symmetric.key
  openssl rand -base64 32
}

foreground {
  if { s6-echo "${PREFIX} ${C032}pulpcore-manager migrate${C000}" }
  export DJANGO_SETTINGS_MODULE pulpcore.app.settings
  export PULP_CONTENT_ORIGIN localhost
  s6-setuidgid postgres
  /usr/local/bin/pulpcore-manager migrate
}
pipeline {
  echo "ready"
}
tee /database/status
